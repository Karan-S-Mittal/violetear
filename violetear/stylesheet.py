import io
import datetime
from pathlib import Path

from .style import Style


class StyleSheet:
    def __init__(self, *styles: Style) -> None:
        self._styles = list(styles)
        self._by_class = {}

    def render(self, fp=None):
        if isinstance(fp, (str, Path)):
            fp = open(fp, "wt")

        if fp is None:
            fp = io.StringIO()

        fp.write("/* Made with violetear */\n")
        fp.write(f"/* Autogenerated on {datetime.datetime.now()} */\n\n")

        for style in self._styles:
            fp.write(style.css())
            fp.write("\n\n")

        if isinstance(fp, io.StringIO):
            result = fp.getvalue()
        else:
            result = None

        fp.close()
        return result

    def style(self, *class_name: str) -> Style:
        if not class_name:
            class_name = tuple([f"_c{len(self._styles)}"])

        style = Style(*class_name)
        self._styles.append(style)
        self._by_class[class_name] = style
        return style

    def __getitem__(self, key) -> Style:
        class_name = tuple(key.split("__"))
        return self._by_class[class_name]

    def __getattr__(self, attr) -> Style:
        return self[attr]
